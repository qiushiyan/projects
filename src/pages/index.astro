---
import MainHead from "@components/MainHead.astro";
import Nav from "@components/Nav.astro";
import PortfolioPreview from "@components/ProjectPreview.astro";
import { CollectionEntry, getCollection } from "astro:content";


type Group = "data-science" | "software" | "other"
type ProjectGroup = {
  description: string;
  projects: CollectionEntry<"project">[]
};
type AllProjects = Record<Group,  ProjectGroup>

const initialAllProjects: AllProjects  =  {
  "software": {
    "description": "General software products, most of which are web apps or small backend services.",
    "projects": []
  },
  "data-science": {
    "description": "Projects involving data analysis and machine learning, typically written in R or Python. Presented as a minimal product as a package, web application, report or API that can be called by others.",
    "projects": []
  },
  "other": {
    "description": "Miscellaneous experiments",
    "projects": []
  }
}

const projects = (await getCollection("project")).reduce((acc, project) => {
  const group = project.data.group
  acc[group]["projects"].push(project)
  return acc;
}, initialAllProjects);
---

<html lang="en">
  <head>
    <MainHead />
  </head>
  <body class="bg-slate-900">
    <Nav />
    <div class="wrapper">
      {
        Object.keys(projects).map((group) => {
          const projectGroup = projects[group as Group];
          return (
            <div class="project-group">
              {group && (
                <h2 class="text-3xl font-extrabold text-yellow-300 capitalize my-2">
                  {group}
                </h2>
                <p class = "text-gray-400 mb-2">{projectGroup.description}</p>
              )}
              <div class="grid grid-cols-2 gap-10">
                {projectGroup.projects.map((project) => (
                  <PortfolioPreview project={project} />
                ))}
              </div>
            </div>
          );
        })
      }
    </div>
    );
  </body>
</html>
